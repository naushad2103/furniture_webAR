:not(:defined) > * {
  display: none;
}

html {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
 background-color: #ebebeb;
}

model-viewer {
  width: 100%;
  height: 100%;
  background-color: #ebebeb;
}

.variant-panel {
  display: none;
  position: absolute;
  top: 55%; /* Position below hotspot (adjust as needed) */
  left: 50%; /* Align center or hotspot-relative */
  transform: translate(-50%, 10px); /* Adjusts the swatch to sit just below */
  background: white;
  border-radius: 12px;
  padding: 12px 2px 12px 12px;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
  z-index: 10;
  font-family: sans-serif;
}
.variant-panel.show {
  display: block;
}
.variant-option {
    display: flex;
    align-items: center;
    padding: 1px;
    border-radius: 8px;
    cursor: pointer;
    transition: background 0.2s;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
}

.variant-option:hover {
  background: #f2f2f2;
}

.swatch {
 width: 120px;
    height: 60px;
    background-size: cover;
    background-position: center;
    border-radius: 4px;
}

.variant-option .label{
  display: flex;
    font-size: 16px;
    color: #333;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: flex-start;
      padding: 4px 26px 4px 4px;
}
.variant-option .label .sub {
  font-size: 8px;
  color: #777;
  font-weight: normal;
}
.Hotspot {
  background: #fff;
  border-radius: 32px;
  border: 0;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
  box-sizing: border-box;
  cursor: pointer;
  height: 24px;
  padding: 8px;
  position: relative;
  transition: opacity 0.3s;
  width: 24px;
}

.Hotspot:not([data-visible]) {
  background: transparent;
  border: 4px solid #fff;
  box-shadow: none;
  height: 32px;
  pointer-events: none;
  width: 32px;
}

.Hotspot:focus {
  border: 4px solid rgb(0, 128, 200);
 
}

.Hotspot > * {
  opacity: 1;
  transform: translateY(-50%);
}

.hotspot-icon {
  background: white;
  border-radius: 50%;
  border: 2px solid #000000;
  width: 60px;
  height: 60px;
  padding: 6px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  transition: all 0.2s ease;
  cursor: pointer;
}

.hotspot-icon:hover {
   border: 4px solid rgb(0, 128, 200);
  background: #ffffff;
  transform: scale(1.05);
}

.hotspot-icon img {
   pointer-events: none;
  user-select: none;
  width: 20px;
  height: 20px;
  object-fit: contain;
}


.progress-bar {
  display: block;
  width: 33%;
  height: 10%;
  max-height: 2%;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate3d(-50%, -50%, 0);
  border-radius: 25px;
  box-shadow: 0px 3px 10px 3px rgba(0, 0, 0, 0.5), 0px 0px 5px 1px rgba(0, 0, 0, 0.6);
  border: 1px solid rgba(255, 255, 255, 0.9);
  background-color: rgba(0, 0, 0, 0.5);
}

.progress-bar.hide {
  visibility: hidden;
  transition: visibility 0.3s;
}

.update-bar {
  background-color: rgba(255, 255, 255, 0.9);
  width: 0%;
  height: 100%;
  border-radius: 25px;
  float: left;
  transition: width 0.3s;
}

#ar-button {
  background-image: url(ar_icon.png);
  background-repeat: no-repeat;
  background-size: 20px 20px;
  background-position: 12px 50%;
  background-color: #fff;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  bottom: 16px;
  padding: 0px 16px 0px 40px;
  font-family: Roboto Regular, Helvetica Neue, sans-serif;
  font-size: 14px;
  color:#4285f4;
  height: 36px;
  line-height: 36px;
  border-radius: 18px;
  border: 1px solid #DADCE0;
}

#ar-button:active {
  background-color: #E8EAED;
}

#ar-button:focus {
  outline: none;
}

#ar-button:focus-visible {
  outline: 1px solid #4285f4;
}

@keyframes circle {
  from { transform: translateX(-50%) rotate(0deg) translateX(50px) rotate(0deg); }
  to   { transform: translateX(-50%) rotate(360deg) translateX(50px) rotate(-360deg); }
}

@keyframes elongate {
  from { transform: translateX(100px); }
  to   { transform: translateX(-100px); }
}

model-viewer > #ar-prompt {
  position: absolute;
  left: 50%;
  bottom: 60px;
  animation: elongate 2s infinite ease-in-out alternate;
  display: none;
}

model-viewer[ar-status="session-started"] > #ar-prompt {
  display: block;
}

model-viewer > #ar-prompt > img {
  animation: circle 4s linear infinite;
}
  #controls {
                    position: absolute;
                    bottom: 16px;
                    left: 16px;
                    max-width: unset;
                    transform: unset;
                    pointer-events: auto;
                    z-index: 100;
                  }

                  .dot {
                    display: none;
                  }

                  .glass {
                    background: rgba(255, 255, 255, 0.37);
                    backdrop-filter: blur(8px) contrast(0.89) saturate(1.27);
                    -webkit-backdrop-filter: blur(8px) contrast(0.89) saturate(1.27);
                    border: 1px solid rgba(255, 255, 255, 0.4);
                    padding: 0.5rem;
                    border-radius: 0.5rem;
                  }

                  .dim {
                    border-radius: 4px;
                    border: none;
                    box-sizing: border-box;
                    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
                    color: rgba(0, 0, 0, 0.8);
                    display: block;
                    font-family: Futura, Helvetica Neue, sans-serif;
                    font-size: 1em;
                    font-weight: 700;
                    max-width: 128px;
                    overflow-wrap: break-word;
                    padding: 0.5em 1em;
                    position: absolute;
                    width: max-content;
                    height: max-content;
                    transform: translate3d(-50%, -50%, 0);
                    pointer-events: none;
                    --min-hotspot-opacity: 0;
                  }

                  @media only screen and (max-width: 800px) {
                    .dim {
                      font-size: 3vw;
                    }
                  }

                  .dimensionLineContainer {
                    pointer-events: none;
                    display: block;
                  }

                  .dimensionLine {
                    stroke: #16a5e6;
                    stroke-width: 2;
                    stroke-dasharray: 2;
                  }

                  .hide {
                    display: none;
                  }

                  /* This keeps child nodes hidden while the element loads */
                  :not(:defined)>* {
                    display: none;
                  }
